#############################################################################
# Makefile for building: caide
# Generated by qmake (1.07a) (Qt 3.3.4) on: Wed Mar 30 18:39:53 2005
# Project:  caide.pro
# Template: app
# Command: $(QMAKE) -o Makefile caide.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -march=athlon-xp -pipe -O2  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -march=athlon-xp -pipe -O2  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mainwin.h \
		editors/code_editor.h \
		output_win/outputwin.h \
		solution_explorer/project_browser.h \
		solution_explorer/solution_explorer.h
SOURCES = main.cpp \
		mainwin.cpp \
		editors/code_editor.cpp \
		output_win/outputwin.cpp \
		solution_explorer/project_browser.cpp \
		solution_explorer/solution_explorer.cpp
OBJECTS = main.o \
		mainwin.o \
		code_editor.o \
		outputwin.o \
		project_browser.o \
		solution_explorer.o \
		qmake_image_collection.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_mainwin.cpp \
		output_win/moc_outputwin.cpp \
		solution_explorer/moc_project_browser.cpp \
		solution_explorer/moc_solution_explorer.cpp
OBJMOC = moc_mainwin.o \
		moc_outputwin.o \
		moc_project_browser.o \
		moc_solution_explorer.o
DIST	   = caide.pro
QMAKE_TARGET = caide
DESTDIR  = 
TARGET   = caide

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: caide.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile caide.pro
qmake: 
	@$(QMAKE) -o Makefile caide.pro

dist: 
	@mkdir -p .tmp/caide && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/caide/ && $(COPY_FILE) --parents images/applogo.png images/features.png images/close.png images/startpage-title.png .tmp/caide/ && ( cd `dirname .tmp/caide` && $(TAR) caide.tar caide && $(GZIP) caide.tar ) && $(MOVE) `dirname .tmp/caide`/caide.tar.gz . && $(DEL_FILE) -r .tmp/caide

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
		-$(DEL_FILE) qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp mainwin.h

mainwin.o: mainwin.cpp mainwin.h

code_editor.o: editors/code_editor.cpp editors/code_editor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o code_editor.o editors/code_editor.cpp

outputwin.o: output_win/outputwin.cpp output_win/outputwin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputwin.o output_win/outputwin.cpp

project_browser.o: solution_explorer/project_browser.cpp solution_explorer/project_browser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o project_browser.o solution_explorer/project_browser.cpp

solution_explorer.o: solution_explorer/solution_explorer.cpp solution_explorer/solution_explorer.h \
		solution_explorer/project_browser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o solution_explorer.o solution_explorer/solution_explorer.cpp

moc_mainwin.o: moc_mainwin.cpp  mainwin.h 

moc_outputwin.o: output_win/moc_outputwin.cpp  output_win/outputwin.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputwin.o output_win/moc_outputwin.cpp

moc_project_browser.o: solution_explorer/moc_project_browser.cpp  solution_explorer/project_browser.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_project_browser.o solution_explorer/moc_project_browser.cpp

moc_solution_explorer.o: solution_explorer/moc_solution_explorer.cpp  solution_explorer/solution_explorer.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_solution_explorer.o solution_explorer/moc_solution_explorer.cpp

moc_mainwin.cpp: $(MOC) mainwin.h
	$(MOC) mainwin.h -o moc_mainwin.cpp

output_win/moc_outputwin.cpp: $(MOC) output_win/outputwin.h
	$(MOC) output_win/outputwin.h -o output_win/moc_outputwin.cpp

solution_explorer/moc_project_browser.cpp: $(MOC) solution_explorer/project_browser.h
	$(MOC) solution_explorer/project_browser.h -o solution_explorer/moc_project_browser.cpp

solution_explorer/moc_solution_explorer.cpp: $(MOC) solution_explorer/solution_explorer.h
	$(MOC) solution_explorer/solution_explorer.h -o solution_explorer/moc_solution_explorer.cpp

qmake_image_collection.o: qmake_image_collection.cpp

qmake_image_collection.cpp: images/applogo.png \
		images/features.png \
		images/close.png \
		images/startpage-title.png
	$(UIC)  -embed caide images/applogo.png images/features.png images/close.png images/startpage-title.png -o qmake_image_collection.cpp

####### Install

install:  

uninstall:  

